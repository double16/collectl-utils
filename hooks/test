#!/bin/bash -xe

. ./hooks/env

function retry {
  local retry_max=$1
  shift

  local count=$retry_max
  while [ $count -gt 0 ]; do
    "$@" && break
    count=$(($count - 1))
    sleep 1
  done

  [ $count -eq 0 ] && {
    echo "Retry failed [$retry_max]: $@" >&2
    return 1
  }
  return 0
}

function finish {
  [ -n "$CID1" ] && docker logs ${CID1}
  [ -n "$CID1" ] && docker rm -f $CID1
  [ -n "$CONSULID" ] && docker rm -f $CONSULID
}
trap finish EXIT

function passing_service {
  docker run --rm --network container:${CONSULID} appropriate/curl -s http://localhost:8500/v1/health/state/passing | grep -q "ServiceName.*$1"
}

function container_healthy {
  docker inspect $1 | grep -q \"Status\".*\"healthy\"
}

# setup
CONSULID=$(docker run -d -e CONSUL_DEV=1 pdouble16/autopilotpattern-consul:1.0.2-r2)
CID1=$(docker run -d -e CONSUL_AGENT=1 -e CONSUL=consul --link ${CONSULID}:consul $IMAGE_NAME)

# tests
retry 60 passing_service prometheus

retry 125 container_healthy ${CID1}

retry 5 docker run --rm --network container:${CONSULID} appropriate/curl -s -o /dev/null http://localhost:9090/metrics
retry 5 passing_service containerpilot

retry 5 docker run --rm --network container:${CONSULID} appropriate/curl -s -o /dev/null http://localhost:9100/metrics
retry 5 passing_service node-exporter

